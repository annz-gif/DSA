class Solution {
public:
    long long maximumSubarraySum(vector<int>& nums, int k) {
        long long res = 0;
        unordered_map<int, int> count;
        long long curSum = 0;
        
        int l = 0;
        for (int r = 0; r < nums.size(); r++) {
            curSum += nums[r];
            count[nums[r]]++;
            
            if (r - l + 1 > k) {
                count[nums[l]]--;
                if (count[nums[l]] == 0) {
                    count.erase(nums[l]);
                }
                curSum -= nums[l];
                l++;
            }
            
            if (count.size() == k && (r - l + 1) == k) {
                res = max(res, curSum);
            }
        }
        
        return res;
    }
};
