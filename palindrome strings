#include <iostream>
#include <string>
using namespace std;

int countPalindromicSubstrings(const string& s) {
    int n = s.size();
    int count = 0;

    // Function to count palindromes centered around a single character (odd-length)
    auto expandAroundCenter = [&](int left, int right) {
        int cnt = 0;
        while (left >= 0 && right < n && s[left] == s[right]) {
            cnt++;
            left--;
            right++;
        }
        return cnt;
    };

    // Iterate through each character
    for (int i = 0; i < n; i++) {
        // Odd-length palindromes (single character center)
        count += expandAroundCenter(i, i);
        
        // Even-length palindromes (pair center)
        if (i + 1 < n) {
            count += expandAroundCenter(i, i + 1);
        }
    }

    return count;
}

int main() {
    string s;
    cin >> s;

    int result = countPalindromicSubstrings(s);
    cout << result << endl;

    return 0;
}
