#include <iostream>
#include <vector>
using namespace std;

// Function to count the number of set bits in a number
int countSetBits(int num) {
    int count = 0;
    while (num) {
        count += (num & 1);
        num >>= 1;
    }
    return count;
}

int main() {
    int Q;
    cin >> Q;  // Number of queries
    
    vector<pair<int, int>> queries(Q);
    int max_b = 0;
    
    // Read the queries and track the largest value of 'b'
    for (int i = 0; i < Q; ++i) {
        cin >> queries[i].first >> queries[i].second;
        max_b = max(max_b, queries[i].second);  // Update max_b
    }
    
    // Precompute the number of set bits from 0 to max_b
    vector<int> setBitsCount(max_b + 1, 0);
    
    for (int i = 1; i <= max_b; ++i) {
        setBitsCount[i] = setBitsCount[i - 1] + countSetBits(i);
    }
    
    // Process each query
    for (int i = 0; i < Q; ++i) {
        int a = queries[i].first;
        int b = queries[i].second;
        
        // Output the result for the query
        if (a > 0)
            cout << setBitsCount[b] - setBitsCount[a - 1] << endl;
        else
            cout << setBitsCount[b] << endl;
    }

    return 0;
}
